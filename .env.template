# ============================================
# GitHub MCP Server - OAuth Configuration
# ============================================
#
# You need to create OAuth credentials for GitHub authentication.
#
# RECOMMENDED: OAuth App (Simpler)
# 1. Go to: https://github.com/settings/developers
# 2. Click "OAuth Apps" â†’ "New OAuth App"
# 3. Fill in:
#    - Application name: Your choice (e.g., "GitHub Docs MCP")
#    - Homepage URL: http://localhost:3000
#    - Authorization callback URL: http://localhost:3000/auth/callback
# 4. Copy Client ID and Client Secret below
#
# ALTERNATIVE: GitHub App (Also Works, More Complex)
# 1. Go to: https://github.com/settings/apps/new
# 2. Use the app's Client ID and Client Secret
#
# ============================================

# OAuth App Credentials (Required)
GITHUB_CLIENT_ID=your_oauth_app_client_id_here
GITHUB_CLIENT_SECRET=your_oauth_app_client_secret_here

# ============================================
# Default Repository (Optional)
# ============================================
#
# Set defaults to avoid specifying repo every time.
# Users can still override in conversation.
# Leave empty to always specify in conversation.
#

GH_DEFAULT_OWNER=your-github-username
GH_DEFAULT_REPO=your-repo-name

# ============================================
# Default Docroot (Optional) - NEW in v3.0.0
# ============================================
#
# Set a default folder path to limit MCP scope.
# This reduces token usage for catalog operations.
#
# Examples:
#   GH_DEFAULT_DOCROOT=docs          # Only scan /docs folder
#   GH_DEFAULT_DOCROOT=docs/guides   # Only scan /docs/guides folder
#   GH_DEFAULT_DOCROOT=              # Scan entire repository (default)
#
# Priority hierarchy (highest to lowest):
#   1. Tool parameter (specified in conversation)
#   2. Per-repo config (.mcp-config.json in repo)
#   3. This server default (GH_DEFAULT_DOCROOT)
#   4. Repository root (fallback)
#

GH_DEFAULT_DOCROOT=
